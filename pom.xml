<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	       xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>es.udc.rs.telco</groupId>
	<artifactId>rs-telco</artifactId>
	<packaging>pom</packaging>
	<version>1.0.0</version>
	<name>RS-Telco Project</name>

	<modules>
		<module>rs-telco-model</module>
		<module>rs-telco-service</module>
		<module>rs-telco-client</module>
	</modules>

	<!-- =================================================================== -->
	<!-- Default values for properties. These default values are expected to 
		be valid for most profiles. Specific profiles can overwrite values when necessary. -->
	<properties>
		<!-- Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<jdom2.version>2.0.6.1</jdom2.version>
		<jersey.version>3.1.2</jersey.version>
		<jackson.version>2.15.1</jackson.version>
		<jaxb.version>4.0.3</jaxb.version>
		<jakarta.jaxb.version>4.0.0</jakarta.jaxb.version>
		<junit.version>5.9.3</junit.version>
		<jakarta.activation.version>2.1.2</jakarta.activation.version>
		<jakarta.ws.rs.version>3.1.0</jakarta.ws.rs.version>
		<slf4j.version>2.0.7</slf4j.version>
		<wsutil.version>3.7.0</wsutil.version>

		<!-- Plugin versions -->
		<compilerMavenPlugin.version>3.11.0</compilerMavenPlugin.version>
		<resourcesMavenPlugin.version>3.3.1</resourcesMavenPlugin.version>
		<execMavenPlugin.version>3.1.0</execMavenPlugin.version>
		<jettyMavenPlugin>11.0.15</jettyMavenPlugin>
		<jaxb2MavenPlugin>3.1.0</jaxb2MavenPlugin>
		<surefireMavenPlugin.version>3.1.2</surefireMavenPlugin.version>
		<assemblyMavenPlugin.version>3.6.0</assemblyMavenPlugin.version>
		<enforcerMavenPlugin.version>3.3.0</enforcerMavenPlugin.version>
		<warMavenPlugin.version>3.4.0</warMavenPlugin.version>
	</properties>
	
	<!-- ========================================================== -->
	<!-- Additional repositories -->
	<repositories>
	</repositories>

	<!-- ========================================================== -->
	<!-- Dependency management -->
	<dependencyManagement>
		<dependencies>
			<!-- JAF (jakarta.activation) -->
			<dependency>
				<groupId>jakarta.activation</groupId>
				<artifactId>jakarta.activation-api</artifactId>
				<version>${jakarta.activation.version}</version>
			</dependency>
			<!-- JUnit -->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- JAXB (java.xml.bind)  -->
			<dependency>
				<groupId>jakarta.xml.bind</groupId>
				<artifactId>jakarta.xml.bind-api</artifactId>
				<version>${jakarta.jaxb.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-impl</artifactId>
				<version>${jaxb.version}</version>
			</dependency>
			<!-- WS-JavaExamples Util -->
			<dependency>
				<groupId>es.udc.ws</groupId>
				<artifactId>ws-util</artifactId>
				<version>${wsutil.version}</version>
			</dependency>
			<!-- JDOM2 -->
			<dependency>
				<groupId>org.jdom</groupId>
				<artifactId>jdom2</artifactId>
				<version>${jdom2.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.ws.rs</groupId>
				<artifactId>jakarta.ws.rs-api</artifactId>
				<version>${jakarta.ws.rs.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.containers</groupId>
				<artifactId>jersey-container-servlet</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.inject</groupId>
				<artifactId>jersey-hk2</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-common</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<!-- Jersey client -->
			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-client</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-jaxb</artifactId>
				<version>${jersey.version}</version>
			</dependency> 
			<!-- Jersey JSON support / Jackson -->
			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-json-jackson</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<!-- SLF4J -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- Telco Model -->
			<dependency>
				<groupId>es.udc.rs.telco</groupId>
				<artifactId>rs-telco-model</artifactId>
				<version>${project.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>

		<!-- =============================================================== -->
		<!-- Filtering -->
		<resources>

			<!-- Consider resources the files in src/main/resources, without applying 
				filtering. -->
			<resource>
				<directory>src/main/resources</directory>
			</resource>

			<!-- Consider resources Jetty configuration files which do not require 
				filtering -->
			<resource>
				<directory>../src/main/jetty</directory>
				<includes>
					<include>jetty-context.xml</include>
				</includes>
				<targetPath>../jetty</targetPath>
			</resource>

			<!-- Filter Jetty configuration -->
			<resource>
				<directory>../src/main/jetty</directory>
				<includes>
					<include>jetty-env.xml</include>
				</includes>
				<targetPath>../jetty</targetPath>
				<filtering>true</filtering>
			</resource>
			
		</resources>

		<testResources>

			<!-- Consider resources the files in src/test/resources, without applying 
				filtering. -->
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>

		</testResources>


		<plugins>

			<!-- ========================================================== -->
			<!-- Compiler configuration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compilerMavenPlugin.version}</version>
				<configuration>
					<verbose>true</verbose>
					<!-- Source & target are not necessary, but intelliJ depends on it to set the Java compiler settings  -->
					<source>17</source>
					<target>17</target>
					<release>17</release>
					<encoding>${project.build.sourceEncoding}</encoding>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>

			<!-- ========================================================== -->
			<!-- Resources plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${resourcesMavenPlugin.version}</version>
			</plugin>

			<!-- ========================================================== -->
			<!-- War plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${warMavenPlugin.version}</version>
			</plugin>

			<!-- ========================================================== -->
			<!-- Surefire plugin -->
			<!-- Default version does not support JUnit 5. -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefireMavenPlugin.version}</version>
			</plugin>

  			<!-- ========================================================== -->
			<!-- Exec plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${execMavenPlugin.version}</version>
				<configuration>
					<!-- From jersey 3.1.2, sometimes client application executed with exec plugin finished
					     with error due to not be able to stop all threads -->
					<cleanupDaemonThreads>false</cleanupDaemonThreads>
				</configuration>
			</plugin>

			<!-- ========================================================== -->
			<!-- Assembly configuration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${assemblyMavenPlugin.version}</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/src.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>

			<!-- ========================================================== -->
			<!-- Jetty configuration -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jettyMavenPlugin}</version>

				<configuration>
					<httpConnector>
						<port>7070</port>
					</httpConnector>
					<contextXml>target/jetty/jetty-context.xml</contextXml>
					<webApp>
						<contextPath>/${project.artifactId}</contextPath>
						<jettyEnvXml>target/jetty/jetty-env.xml</jettyEnvXml>
					</webApp>
					<scan>0</scan>
				</configuration>
			</plugin>
			
			<!-- ========================================================== -->
			<!-- Enforcer configuration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${enforcerMavenPlugin.version}</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
								<version>3.5.0</version>
								</requireMavenVersion>
							</rules>    
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

</project>

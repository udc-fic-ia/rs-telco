<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	       xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>es.udc.rs.telco</groupId>
	<artifactId>rs-telco</artifactId>
	<packaging>pom</packaging>
	<version>1.0.0</version>
	<name>RS-Telco Project</name>

	<modules>
		<module>rs-telco-model</module>
		<module>rs-telco-service</module>
		<module>rs-telco-client</module>
	</modules>

	<!-- =================================================================== -->
	<!-- Default values for properties. These default values are expected to 
		be valid for most profiles. Specific profiles can overwrite values when necessary. -->
	<properties>
		<!-- Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Package versions (except those defined in "profiles" section) -->
		<jdom2.version>2.0.6</jdom2.version>
		<jersey.version>2.31</jersey.version>
		<jackson.version>2.11.0</jackson.version>
		<jaxb.version>2.3.3</jaxb.version>
		<junit.version>5.6.2</junit.version>
		<jakartaActivation.version>1.2.1</jakartaActivation.version>
		<slf4j.version>1.7.9</slf4j.version>
		<wsUtil.version>3.4.0</wsUtil.version>

		<!-- Plugin versions -->
	  <compilerMavenPlugin.version>3.8.1</compilerMavenPlugin.version>
		<resourcesMavenPlugin.version>3.1.0</resourcesMavenPlugin.version>
		<execMavenPlugin.version>3.0.0</execMavenPlugin.version>
		<jettyMavenPlugin>9.4.28.v20200408</jettyMavenPlugin>
		<jaxwsMavenPlugin>2.5</jaxwsMavenPlugin>
		<jaxb2MavenPlugin>2.4</jaxb2MavenPlugin>
		<surefireMavenPlugin.version>2.22.2</surefireMavenPlugin.version>
		<assemblyMavenPlugin.version>3.3.0</assemblyMavenPlugin.version>
		<enforcerMavenPlugin.version>1.4.1</enforcerMavenPlugin.version>
	</properties>

	<!-- ========================================================== -->
	<!-- Profiles -->
	<profiles>
		<profile>
			<id>win</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<tool.wsgen>${java.home}/../bin/wsgen.exe</tool.wsgen>
			</properties>
		</profile>
		<profile>
			<id>nix</id>
			<activation>
				<os>
					<family>!windows</family>
				</os>
			</activation>
			<properties>
				<tool.wsgen>${java.home}/../bin/wsgen</tool.wsgen>
			</properties>
		</profile>
	</profiles>
	
	<!-- ========================================================== -->
	<!-- Additional repositories -->
	<repositories>
	</repositories>

	<!-- ========================================================== -->
	<!-- Dependency management -->
	<dependencyManagement>
		<dependencies>
			<!-- JAF (javax.activation) -->
			<dependency>
				<groupId>com.sun.activation</groupId>
				<artifactId>jakarta.activation</artifactId>
				<version>${jakartaActivation.version}</version>
			</dependency>
			<!-- JUnit -->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- JAXB (java.xml.bind)  -->
			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-impl</artifactId>
				<version>${jaxb.version}</version>
			</dependency>
			<!-- WS-JavaExamples Util -->
			<dependency>
				<groupId>es.udc.ws</groupId>
				<artifactId>ws-util</artifactId>
				<version>${wsUtil.version}</version>
			</dependency>
			<!-- JDOM2 -->
			<dependency>
				<groupId>org.jdom</groupId>
				<artifactId>jdom2</artifactId>
				<version>${jdom2.version}</version>
			</dependency>
			<!-- Jersey server -->
			<dependency>
				<groupId>org.glassfish.jersey.containers</groupId>
				<artifactId>jersey-container-servlet</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.inject</groupId>
				<artifactId>jersey-hk2</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-common</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<!-- Jersey client -->
			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-client</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-jaxb</artifactId>
				<version>${jersey.version}</version>
			</dependency> 
			<!-- Jersey JSON support / Jackson -->
			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-json-jackson</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<!-- SLF4J -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- Telco Model -->
			<dependency>
				<groupId>es.udc.rs.telco</groupId>
				<artifactId>rs-telco-model</artifactId>
				<version>${project.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>

		<!-- =============================================================== -->
		<!-- Filtering -->
		<resources>

			<!-- Consider resources the files in src/main/resources, without applying 
				filtering. -->
			<resource>
				<directory>src/main/resources</directory>
			</resource>

			<!-- Consider resources Jetty configuration files which do not require 
				filtering -->
			<resource>
				<directory>../src/main/jetty</directory>
				<includes>
					<include>jetty-context.xml</include>
				</includes>
				<targetPath>../jetty</targetPath>
			</resource>

			<!-- Filter Jetty configuration -->
			<resource>
				<directory>../src/main/jetty</directory>
				<includes>
					<include>jetty-env.xml</include>
				</includes>
				<targetPath>../jetty</targetPath>
				<filtering>true</filtering>
			</resource>
			
		</resources>

		<testResources>

			<!-- Consider resources the files in src/test/resources, without applying 
				filtering. -->
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>

		</testResources>


		<plugins>

			<!-- ========================================================== -->
			<!-- Compiler configuration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compilerMavenPlugin.version}</version>
				<configuration>
					<verbose>true</verbose>
					<!-- Source & target are not necessary, but intelliJ depends on it to set the Java compiler settings  -->
					<source>11</source>
					<target>11</target>					
					<release>11</release>
					<encoding>${project.build.sourceEncoding}</encoding>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>

						<!-- ========================================================== -->
			<!-- Resources plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${resourcesMavenPlugin.version}</version>
			</plugin>

			<!-- ========================================================== -->
			<!-- Surefire plugin -->
			<!-- Default version does not support JUnit 5. -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefireMavenPlugin.version}</version>
			</plugin>

  			<!-- ========================================================== -->
			<!-- Exec plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${execMavenPlugin.version}</version>
			</plugin>

			<!-- ========================================================== -->
			<!-- Assembly configuration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${assemblyMavenPlugin.version}</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/src.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>

			<!-- ========================================================== -->
			<!-- Jetty configuration -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jettyMavenPlugin}</version>

				<configuration>
					<httpConnector>
						<port>7070</port>
					</httpConnector>
					<contextXml>target/jetty/jetty-context.xml</contextXml>
					<webAppConfig>
						<contextPath>/${project.artifactId}</contextPath>
						<jettyEnvXml>target/jetty/jetty-env.xml</jettyEnvXml>
					</webAppConfig>
					<reload>manual</reload>
				</configuration>
			</plugin>
			
			<!-- ========================================================== -->
			<!-- Enforcer configuration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${enforcerMavenPlugin.version}</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
								<version>3.0.5</version>
								</requireMavenVersion>
							</rules>    
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

</project>
